node{
    stage('SCM Checkout'){
        git branch: 'main', credentialsId: 'githubCodeRepoCredentials', url: 'https://github.com/vks414/composable-commerce.git'
    }
    /*
    stage('SonarQube Analysis') {
        def scannerHome = tool 'SonarScanner';
        withSonarQubeEnv('sonar-server') {
            sh "${scannerHome}/bin/sonar-scanner"
        }
   }
   */
    /*
   stage("Quality Gate"){
       timeout(time: 1, unit: 'HOURS') { // Just in case something goes wrong, pipeline will be killed after a timeout
           def qg = waitForQualityGate() // Reuse taskId previously collected by withSonarQubeEnv
           if (qg.status != 'OK') {
               error "Pipeline aborted due to quality gate failure: ${qg.status}"
           }
       }
   }   
    */
      

    stage('build the image'){    
        sh 'docker build -t shalu7/storefront-nextjs-app -f storefront-nextjs/Dockerfile storefront-nextjs'
    }
   
    stage('stop and remove already running container'){
        sh 'docker stop myapp'
        sh 'docker rm myapp'
    }
    stage('Push the image'){
        withCredentials([string(credentialsId: 'dockerHubPassword', variable: 'dockerHubPwd')]) {
            sh "docker login -u shalu7 -p ${dockerHubPwd}"
        }
        sh 'docker push shalu7/storefront-nextjs-app'
    }
    
    stage('run the image'){
        sh 'docker run -dp 3001:3000 --name myapp shalu7/storefront-nextjs-app'
    }
}