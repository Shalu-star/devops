{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "ResourcePrefix": {
      "type": "string",
      "metadata": {
        "description": "Provide a 2-13 character prefix for all resources."
      }
    },
    "webAppName": {
      "type": "string",
      "defaultValue": "[format('{0}-frontend-website', parameters('ResourcePrefix'))]",
      "minLength": 2,
      "metadata": {
        "description": "Web app name."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "sku": {
      "type": "string",
      "defaultValue": "B3",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "The SKU of App Service Plan."
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[format('{0}storage', parameters('ResourcePrefix'))]",
      "metadata": {
        "description": "The name of the storage account."
      }
    },
    "AZUREBLOB_EXPIRY_DAYS": {
      "type": "int",
      "defaultValue": 30,
      "metadata": {
        "description": "Number of days until the Azure Blob SAS token expires."
      }
    },

    "serverName": {
      "type": "string",
      "defaultValue": "[format('{0}-server', parameters('ResourcePrefix'))]",
      "metadata": {
        "description": "The name of the SQL logical server."
      }
    },
    "sqlDBName": {
      "type": "string",
      "defaultValue": "[format('{0}-Db', parameters('ResourcePrefix'))]",
      "metadata": {
        "description": "The name of the SQL Database."
      }
    },
    "databaseDriver": {
      "type": "string",
      "defaultValue": "ODBC Driver 18 for SQL Server",
      "metadata": {
        "description": "The database driver to use."
      }
    },
    "administratorLogin": {
      "type": "string",
      "metadata": {
        "description": "The administrator username of the SQL logical server."
      }
    },
    "administratorLoginPassword": {
      "type": "secureString",
      "metadata": {
        "description": "The administrator password of the SQL logical server."
      }
    },
    "tavilyApiKey": {
      "type": "string",
      "metadata": {
        "description": "The TAVILY_API_KEY"
      }
    },
    "redisEndpoint": {
      "type": "string",
      "metadata": {
        "description": "The redis endpoint"
      }
    },
    "redisKey": {
      "type": "string",
      "metadata": {
        "description": "The redis key"
      }
    },
    "embeddingsOpenAiApiKey": {
      "type": "string",
      "metadata": {
        "description": "The embeddings open ai api key"
      }
    },
    "embeddingsAzureEndpoint": {
      "type": "string",
      "metadata": {
        "description": "The Embeddings Azure Endpoint"
      }
    },
    "embeddingsDeployment": {
      "type": "string",
      "metadata": {
        "description": "The Embeddings Deplyment name"
      }
    },
    "embeddingsOpenAiApiVersions": {
      "type": "string",
      "metadata": {
        "description": "The Embeddings Open Ai Api Versions"
      }
    },
    "BaseLlmApiKey": {
      "type": "string",
      "metadata": {
        "description": "The Base LLM api key"
      }
    },
    "baseLlmApiBase": {
      "type": "string",
      "metadata": {
        "description": "The LLM API base"
      }
    },
    "baseLlmApiType": {
      "type": "string",
      "metadata": {
        "description": "The Base LLM api type"
      }
    },
    "baseLlmApiVersions": {
      "type": "string",
      "metadata": {
        "description": "The Base LLM Api Versions"
      }
    },
    "baseLlmDeploymentName": {
      "type": "string",
      "metadata": {
        "description": "The Base LLM Deployment Name "
      }
    },
    "baseLlmModelVersions": {
      "type": "string",
      "metadata": {
        "description": "The base LLM model versions"
      }
    },
    "GPT4ApiKey": {
      "type": "string",
      "metadata": {
        "description": "The GPT4 Api key"
      }
    },
    "GPT4ApiBase": {
      "type": "string",
      "metadata": {
        "description": "The GPT4 Api base"
      }
    },
    "GPT4ApiType": {
      "type": "string",
      "metadata": {
        "description": "The GPT4 Api Type"
      }
    },
    "GPT4ApiVersions": {
      "type": "string",
      "metadata": {
        "description": "The GPT4 Api Versions "
      }
    },
    "GPT4DeploymentName": {
      "type": "string",
      "metadata": {
        "description": "The GPT4 Deployment name"
      }
    },
    "GPT4ModelVersions": {
      "type": "string",
      "metadata": {
        "description": "The GPT4 model versions"
      }
    },
    "GPT4VisionApiType": {
      "type": "string",
      "metadata": {
        "description": "The GPT4 Vision api type"
      }
    },
    "GPT4VisionApikey": {
      "type": "string",
      "metadata": {
        "description": "The GPT4Vision api key"
      }
    },
    "GPT4VisionApiBase": {
      "type": "string",
      "metadata": {
        "description": "The GPT4 vision api base"
      }
    },
    "GPT4VisionApiVersion": {
      "type": "string",
      "metadata": {
        "description": "The GPT4 Vision Api version"
      }
    },
    "GPT4VisionDeploymentName": {
      "type": "string",
      "metadata": {
        "description": "The GPT4 Vision Deployment name"
      }
    },
    "GPT4VisionModelVersion": {
      "type": "string",
      "metadata": {
        "description": "The GPT4 Vision Model Version"
      }
    },
    "ApplicationInsightsName": {
      "type": "string",
      "defaultValue": "[format('{0}-appinsights', parameters('ResourcePrefix'))]",
      "metadata": {
        "description": "Name of Application Insights"
      }
    }
  },
  "variables": {
    "FrontendImageName": "DOCKER|dcxgenai.azurecr.io/dcx-genai-dev-studion-image",
    "BackendImageName": "DOCKER|dcxgenai.azurecr.io/devstudio-image",
    "BlobContainerName": "images",
    "FrontendWebsiteUrl": "[concat('https://', parameters('webAppName'), '.azurewebsites.net')]"
  },
  "resources": [
    //SQL DB
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2022-05-01-preview",
      "name": "[parameters('serverName')]",
      "location": "[parameters('location')]",
      "properties": {
        "administratorLogin": "[parameters('administratorLogin')]",
        "administratorLoginPassword": "[parameters('administratorLoginPassword')]"
      }
    },
    {
      "type": "Microsoft.Sql/servers/firewallRules",
      "apiVersion": "2022-05-01-preview",
      "name": "[concat(parameters('serverName'), '/AllowAllAzureServices')]",
      "location": "[parameters('location')]",
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "0.0.0.0"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('serverName'))]"
      ]
    },
    {
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2022-05-01-preview",
      "name": "[format('{0}/{1}', parameters('serverName'), parameters('sqlDBName'))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('serverName'))]"
      ]
    },

    // Storage Account
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-05-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2022-05-01",
      "name": "[concat(parameters('storageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2022-05-01",
      "name": "[concat(parameters('storageAccountName'), '/default/',   variables('BlobContainerName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    //AppInsights
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[parameters('ApplicationInsightsName')]",
      "location": "[parameters('Location')]",
      "tags": {
        "[format('hidden-link:{0}', resourceId('Microsoft.Web/sites', parameters('ApplicationInsightsName')))]": "Resource"
      },
      "properties": {
        "Application_Type": "web"
      }
    },

    // Backend Web App
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-02-01",
      "name": "[format('AppServicePlan-{0}-backend', parameters('webAppName'))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('sku')]"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[format('{0}-backend-website', parameters('ResourcePrefix'))]",
      "location": "[parameters('location')]",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('AppServicePlan-{0}-backend', parameters('webAppName')))]",
        "clientAffinityEnabled": false,
        "httpsOnly": true,
        "siteConfig": {
          "appSettings": [
            {
              "name": "SQL_SERVER_NAME",
              "value": "[parameters('serverName')]"
            },
            {
              "name": "DB_DRIVER",
              "value": "[parameters('databaseDriver')]"
            },
            {
              "name": "SQL_DATABASE_NAME",
              "value": "[parameters('sqlDBName')]"
            },
            {
              "name": "SQL_ADMIN_NAME",
              "value": "[parameters('administratorLogin')]"
            },
            {
              "name": "SQL_ADMIN_PASSWORD",
              "value": "[parameters('administratorLoginPassword')]"
            },
            {
              "name": "DB_URL",
              "value": "[concat('Driver=',parameters('databaseDriver'),';Server=tcp:', parameters('serverName'), ',1433;Database=', parameters('sqlDBName'), ';Uid=', parameters('administratorLogin'), ';Pwd=', parameters('administratorLoginPassword'), ';Encrypt=yes;TrustServerCertificate=no;Connection Timeout=30;')]"
            },
            {
              "name": "SQLMESSAGEHISTORY_DB_URL",
              "value": "[concat('mssql+pyodbc://', parameters('administratorLogin'), ':', parameters('administratorLoginPassword'), '@', parameters('serverName'), '.database.windows.net:1433/', parameters('sqlDBName'), '?driver=', parameters('databaseDriver'))]"
            },

            {
              "name": "AZURE_BLOB_ACCOUNT_NAME",
              "value": "[parameters('StorageAccountName')]"
            },
            {
              "name": "AZURE_BLOB_ACCOUNT_KEY",
              "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName')), '2019-06-01').keys[0].value]"
            },
            {
              "name": "AZURE_BLOB_CONTAINER_NAME",
              "value": "[variables('BlobContainerName')]"
            },
            {
              "name": "AZUREBLOB_EXPIRY_DAYS",
              "value": "[parameters('AZUREBLOB_EXPIRY_DAYS')]"
            },
            {
              "name": "AZUREBLOB_CONNECTION_STRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName')), '2019-06-01').keys[0].value)]"
            },
            {
              "name": "TAVILY_API_KEY",
              "value": "[parameters('tavilyApiKey')]"
            },
            {
              "name": "Embeddings_OPENAI_API_KEY",
              "value": "[parameters('embeddingsOpenAiApiKey')]"
            },
            {
              "name": "Embeddings_AZURE_ENDPOINT",
              "value": "[parameters('embeddingsAzureEndpoint')]"
            },
            {
              "name": "Embeddings_Deployment",
              "value": "[parameters('embeddingsDeployment')]"
            },
            {
              "name": "Embeddings_OPENAI_API_VERSIONS",
              "value": "[parameters('embeddingsOpenAiApiVersions')]"
            },
            {
              "name": "BASE_LLM_API_KEY",
              "value": "[parameters('BaseLlmApiKey')]"
            },
            {
              "name": "BASE_LLM_API_BASE",
              "value": "[parameters('baseLlmApiBase')]"
            },
            {
              "name": "BASE_LLM_API_TYPE",
              "value": "[parameters('baseLlmApiType')]"
            },
            {
              "name": "BASE_LLM_API_VERSION",
              "value": "[parameters('baseLlmApiVersions')]"
            },
            {
              "name": "BASE_LLM_DEPLOYMENT_NAME",
              "value": "[parameters('baseLlmDeploymentName')]"
            },
            {
              "name": "BASE_LLM_MODEL_VERSION",
              "value": "[parameters('baseLlmModelVersions')]"
            },
            {
              "name": "GPT4_API_KEY",
              "value": "[parameters('GPT4ApiKey')]"
            },
            {
              "name": "GPT4_API_BASE",
              "value": "[parameters('GPT4ApiBase')]"
            },
            {
              "name": "GPT4_API_TYPE",
              "value": "[parameters('GPT4ApiType')]"
            },
            {
              "name": "GPT4_API_VERSION",
              "value": "[parameters('GPT4ApiVersions')]"
            },
            {
              "name": "GPT4_API_DEPLOYMENT_NAME",
              "value": "[parameters('GPT4DeploymentName')]"
            },
            {
              "name": "GPT4_API_MODEL_VERSION",
              "value": "[parameters('GPT4ModelVersions')]"
            },
            {
              "name": "GPT4_VISION_API_KEY",
              "value": "[parameters('GPT4VisionApikey')]"
            },
            {
              "name": "GPT4_VISION_API_BASE",
              "value": "[parameters('GPT4VisionApiBase')]"
            },
            {
              "name": "GPT4_VISION_API_TYPE",
              "value": "[parameters('GPT4VisionApiType')]"
            },
            {
              "name": "GPT4_VISION_API_VERSION",
              "value": "[parameters('GPT4VisionApiVersion')]"
            },
            {
              "name": "GPT4_VISION_DEPLOYMENT_NAME",
              "value": "[parameters('GPT4VisionDeploymentName')]"
            },
            {
              "name": "GPT4_VISION_MODEL_VERSION",
              "value": "[parameters('GPT4VisionModelVersion')]"
            },
            {
              "name": "REDIS_ENDPOINT",
              "value": "[parameters('redisEndpoint')]"
            },
            {
              "name": "REDIS_PASSWORD",
              "value": "[parameters('redisKey')]"
            },
            {
              "name": "APPINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('ApplicationInsightsName')), '2015-05-01').ConnectionString]"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('ApplicationInsightsName')), '2015-05-01').InstrumentationKey]"
            }
          ],
          "cors": {
            "allowedOrigins": [
              "https://portal.azure.com",
              "[variables('FrontendWebsiteUrl')]"
            ]
          },
          "use32BitWorkerProcess": false,
          "linuxFxVersion": "[variables('BackendImageName')]",
          "appCommandLine": "",
          "alwaysOn": true
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', parameters('ApplicationInsightsName'))]",
        "[resourceId('Microsoft.Web/serverfarms', format('AppServicePlan-{0}-backend', parameters('webAppName')))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]",
        "[resourceId('Microsoft.Sql/servers/databases', parameters('serverName'), parameters('sqlDBName'))]"
      ]
    },
    // Frontend Web App
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-02-01",
      "name": "[format('AppServicePlan-{0}-frontend', parameters('webAppName'))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('sku')]"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[parameters('webAppName')]",
      "location": "[parameters('location')]",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('AppServicePlan-{0}-frontend', parameters('webAppName')))]",
        "clientAffinityEnabled": false,
        "httpsOnly": true,
        "siteConfig": {
          "appSettings": [
            {
              "name": "BACKEND_URL",
              "value": "[concat('https://', parameters('webAppName'), '-backend-website.azurewebsites.net')]"
            },
            {
              "name": "APPINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('ApplicationInsightsName')), '2015-05-01').ConnectionString]"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('ApplicationInsightsName')), '2015-05-01').InstrumentationKey]"
            }
          ],
          "cors": {
            "allowedOrigins": ["https://portal.azure.com"]
          },
          "use32BitWorkerProcess": false,
          "linuxFxVersion": "[variables('FrontendImageName')]",
          "appCommandLine": "",
          "alwaysOn": true
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', parameters('ApplicationInsightsName'))]",
        "[resourceId('Microsoft.Web/serverfarms', format('AppServicePlan-{0}-frontend', parameters('webAppName')))]"
      ]
    }
  ],

  "outputs": {
    "storageAccountConnectionString": {
      "type": "string",
      "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(parameters('storageAccountName'), '2019-06-01').keys[0].value)]"
    },
    "sqlDatabaseConnectionString": {
      "type": "string",
      "value": "[concat('Server=tcp:', reference(parameters('serverName')).fullyQualifiedDomainName, ',1433;Initial Catalog=', parameters('sqlDBName'), ';Persist Security Info=False;User ID=', parameters('administratorLogin'), ';Password=', parameters('administratorLoginPassword'), ';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]"
    }
  }
}
